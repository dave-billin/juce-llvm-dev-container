FROM ubuntu:22.04
MAINTAINER Dave Billin <db77junk@gmail.com>

#####################
# DOCKER PARAMETERS:
# CTRUID user ID in the host system given to the CTRUSER account in the container image
# CTRGID group ID in the host system given to the CTRUSER account in the container image
# CTRUSER the name of a non-root user account to create in the container image
# LLVM_VERSION Version of LLVM tools to install (e.g. 15)

# Install common packages
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    apt-transport-https \
    apt-utils \
    bash-completion \
    ca-certificates \
    curl \
    gpgv \
    gnupg \
    less \
    openssh-client \
    software-properties-common \
    sudo \
    wget \
    xz-utils \
  && apt-get -y autoremove \
  && apt-get -y clean


# Install JUCE dependencies
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    libasound2-dev \
    libjack-jackd2-dev \
    ladspa-sdk \
    libcurl4-openssl-dev \
    libfreetype6-dev \
    libx11-dev \
    libxcomposite-dev \
    libxcursor-dev \
    libxext-dev \
    libxinerama-dev \
    libxrandr-dev \
    libxrender-dev \
    libwebkit2gtk-4.0-dev \
    libglu1-mesa-dev \
    mesa-common-dev \
 && apt-get -y autoremove \
 && apt-get -y clean

# Install PulseAudio packages and Carla VST host from KXStudio repositories
RUN wget https://launchpad.net/~kxstudio-debian/+archive/kxstudio/+files/kxstudio-repos_11.1.0_all.deb \
  && dpkg --install kxstudio-repos_11.1.0_all.deb \
  && rm kxstudio-repos_11.1.0_all.deb \
  && apt-get update \
  && apt-get install -y --no-install-recommends \
    carla \
    libpulse0 \
    libasound2 \
    libasound2-plugins \
  && apt-get -y autoremove \
  && apt-get -y clean

# Install additional development utilities
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    doxygen \
    git \
  && apt-get -y autoremove \
  && apt-get -y clean

# NOTE: the version defined here must match the llvm-NN.list file in the .devcontainer directory
ARG LLVM_VERSION=15

# Install the LLVM toolchain and add symlinks to LLVM utilities
RUN wget -O llvm.sh https://apt.llvm.org/llvm.sh \
  && chmod +x llvm.sh \
  && ./llvm.sh ${LLVM_VERSION} all \
  && rm -f llvm.sh \
  && update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-$LLVM_VERSION 60 \
  && update-alternatives --install /usr/bin/cpp cpp /usr/bin/clang-cpp-$LLVM_VERSION 60 \
  && update-alternatives --install /usr/bin/cc cc /usr/bin/clang-cl-$LLVM_VERSION 60 \
  && for u in clang-cl \
              clang \
              clang-apply-replacements \
              clang-change-namespace \
              clang-check \
              clang-extdef-mapping \
              clang-format \
              clang-format-diff \
              clang-include-fixer \
              clang-linker-wrapper \
              clang-move clang-move \
              clang-nvlink-wrapper \
              clang-offload-bundler \
              clang-offload-packager \
              clang-offload-wrapper \
              clang-pseudo \
              clang-query \
              clang-refactor \
              clang-rename \
              clang-reorder-fields \
              clang-repl \
              clang-scan-deps \
              clang-tidy \
              clang-tidy-diff \
              clangd \
    ; do \
      update-alternatives --install /usr/bin/${u} ${u} /usr/bin/${u}-$LLVM_VERSION 60; \
      done

# Set up a sudo-capable user account in the container mapped to the host user's ID and group
ARG CTRUSER
ARG CTRUID
ARG CTRGID

# Set up a vscode user that has the same user and group ID as the host environment user
RUN groupadd --gid $CTRGID $CTRUSER \
    && useradd -s /bin/bash --uid $CTRUID --gid $CTRGID -m $CTRUSER \
    && echo $CTRUSER ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$CTRUSER\
    && chmod +x /etc/sudoers.d/$CTRUSER

# Set up git prompt in the container's bash terminal
COPY git-prompt-bashrc-fragment /tmp/gitprompt
RUN mkdir -p /home/$CTRUSER/.bash-git \
    && for f in git-completion.bash git-prompt.sh; do \
       wget -q -O /home/$CTRUSER/.bash-git/${f} "https://raw.githubusercontent.com/git/git/master/contrib/completion/${f}"; \
       done \
    && cat /tmp/gitprompt >>/home/$CTRUSER/.bashrc

USER $CTRUSER

ENTRYPOINT [ "bash" ]
